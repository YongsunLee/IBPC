제한된 그래픽 프로세서의 성능으로 인해 실시간 그래픽스 분야에서 계산량을 줄이기 위한 연구는 활발하게 진행되어 왔다. 
먼저, 화면에 보이는 오브젝트만 렌더링 하는 기법으로 Viewing Frustum 외부에 있는 오브젝트를 그리지 않는 프러스텀 컬링[4]과 다른 오브젝트에 가려져 카메라에 보이지 않게 된 오브젝트의 렌더링을 버리는 오클루젼 컬링[5]등이 연구되었다. 하지만 오브젝트의 절대적인 개수가 많아질 경우 [4], [5] 알고리즘을 실행하는 것 자체가 계산량이 많아서 문제가 되었기 때문에 한 번에 계산할 객체들의 개수를 줄이기 위해 공간 분할 알고리즘들이 등장하기 시작했다.
Quad tree에서 삼차원 확장된 octal tree, 재귀적으로 유클리드 공간을 초평면 상의 블록 집합으로 분할하는 binary space partition(BSP Tree), kd tree [1], obb tree [6] 등이 연구되었고 이러한 공간분할 방법들의 성능 비교에 대한 연구 또한 같이 진행되었다. [7] 
그러나 해당 방식들을 게임에서의 파티클 시스템 시뮬레이션에 사용하기에는 파티클 시스템이 순간적으로 생성하는 많은 파티클의 수를 실시간으로 계산하기 어려움이 있었고 이것은 성능을 우선으로 하는 게임에서는 사용할 수 없었다. 
이에 정확한 충돌계산보다 성능 우선순위가 높은 경우 사용될 수 있는 Screen Space Depth Buffer Based Collision [2,3] 연구가 진행되었다. 해당 방법은 상용적으로 사용되는 언리얼엔진 4에서도 GPU 파티클과 지오메트리 오브젝트를 충돌하는데 사용할 정도로 효율적인 모습을 보인다. [8] 그러나 해당 방식은 정확도가 기존의 공간분할 충돌방식보다는 떨어지며, 파티클간의 충돌을 처리하지 못한다는 단점이 있다. [9]
본 논문에서 제안하는 시스템은 Screen Space Depth Buffer Based Collision 방식의 장점인 성능에 초점을 맞추었고, 이미지를 이용한 방식을 채택하여 충돌 탐지 텍스처를 이용해서 파티클간 충돌을 처리하는 방식을 제안한다. 다음 절에서 어떠한 방법을 통해 충돌 탐지 텍스처를 생성하고 이것을 이용하여 어떻게 충돌을 처리하는지 설명한다.
